name: Build Books Catalog APK

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      main_project_module: app

    steps:
      #1 Checkout code
      - name: Checkout code
        uses: actions/checkout@v5

      #2 Setup Java and Android SDK
      - name: Set Up Java
        uses: actions/setup-java@v5
        with:
          distribution: "oracle"
          java-version: "17"
          cache: "gradle"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      #3 Setup Gradle Cache and grant gradlew permission
      - name: Setup Gradle Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-${{ hashFiles('**/*.gradle*') }}-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}-${{ hashFiles('**/buildSrc/**/*.kt') }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      #4 Setup Keystore in root
      - name: Setup Keystore
        run: |
          echo "${{ secrets.ANDROID_UPLOAD_KEYSTORE }}" | base64 --decode > ${{ env.main_project_module }}/keystore.jks
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> key.properties
          echo "storeFile=keystore.jks" >> key.properties

      #5 Analyze Project (Lint + Check)
      - name: Analyze Project
        run: ./gradlew lint check

      #6 Build Release APK (signed)
      - name: Build Release APK
        run: ./gradlew assembleRelease

      #7 Extract Version Name
      - name: Extract version from Gradle
        id: extract_version
        run: |
          version=$(./gradlew -q printVersionName | tail -n 1)
          echo "VERSION=$version" >> $GITHUB_ENV

      #8 Check if Tag Exists
      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi

      #9 Modify Tag if it Exists
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      #10 Create Release
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.main_project_module }}/build/outputs/apk/release/app-release.apk"
          tag: v${{ env.VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
